apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    app: mongodb
    tier: database
spec:
  ports:
    - port: 27017
      name: mongodb
  selector:
    app: mongodb
  clusterIP: None
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secrets
type: Opaque
data:
  MONGO_INITDB_ROOT_PASSWORD: c2VjcmV0
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
data:
  MONGO_INITDB_ROOT_USERNAME: dbuser
  MONGO_INITDB_DATABASE: mydb
  MONGO_RS: rs0
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: mongodb
  replicas: 3
  template:
    metadata:
      labels:
        app: mongodb
        tier: database
    spec:
      initContainers:
        - name: mkdirs
          image: alpine:3.5
          command: ["/bin/sh", "-c", "
            if [ ! -d \"/data/db\" ]; then\n
              mkdir /data/db\n
            fi\n
            if [ ! -d \"/data/configdb\" ]; then\n
              mkdir /data/configdb\n
            fi\n
          "]
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data
      containers:
        - image: @docker.image.prefix@/mongodb:@project.version@
          name: mongodb
          ports:
            - containerPort: 27017
              name: mongo
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data
          env:
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: MONGO_INITDB_ROOT_PASSWORD
          envFrom:
            - configMapRef:
                name: mongodb-config
          readinessProbe:
            exec:
              command: ["/bin/bash", "-c", "
                mongo --host ${MONGO_RS}/localhost -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin --quiet --eval \"rs.status().ok\" | grep -v NETWORK | grep 1 \n
              "]
            initialDelaySeconds: 30
            timeoutSeconds: 5
          args: ["--smallfiles", "--noprealloc"]
          #command: ["/bin/bash", "-c", "trap : TERM INT; sleep infinity & wait"]
        - image: @docker.image.prefix@/mongo-sidekick:@project.version@
          name: mongo-sidekick
          env:
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: MONGO_INITDB_ROOT_PASSWORD
          envFrom:
            - configMapRef:
                name: mongodb-config
          command: ["/bin/bash", "-c", "trap : TERM INT; sleep infinity & wait"]
  volumeClaimTemplates:
    - metadata:
        name: mongo-persistent-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
