apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
    tier: middleware
spec:
  ports:
  - port: 5672
    name: amqp
  - port: 15672
    name: management
  selector:
    app: rabbitmq
  clusterIP: None
---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-secrets
type: Opaque
data:
  erlang-cookie: dmVyeSBzZWNyZXQgZXJsYW5nIGNvb2tpZQ==
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: rabbitmq
spec:
  serviceName: rabbitmq
  replicas: 1
  template:
    metadata:
      labels:
        app: rabbitmq
        tier: middleware
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.6-management
        ports:
          - containerPort: 5672
            name: amqp
          - containerPort: 4369
            name: epmd
          - containerPort: 25672
            name: rabbitmq-dist
          - containerPort: 15672
            name: management
        volumeMounts:
          - name: data-storage
            mountPath: /var/lib/rabbitmq
        readinessProbe:
          tcpSocket:
            port: amqp
          initialDelaySeconds: 30
          timeoutSeconds: 5
        env:
          - name: RABBITMQ_ERLANG_COOKIE
            valueFrom:
              secretKeyRef:
                name: rabbitmq-secrets
                key: erlang-cookie
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: RABBITMQ_NODENAME
            value: "rabbit@$(MY_POD_IP)"
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "
                set -x\n

                while true;\n
                do\n
                  rabbitmqctl -n $RABBITMQ_NODENAME node_health_check\n
                  exitCode=$?\n

                  if [ $exitCode = 0 ]; then\n
                      otherNodeCount=`getent hosts \\`hostname -d\\` | wc -l`\n
                      myip=`hostname -i`\n

                      if [ $otherNodeCount = 0 ]; then\n
                          rabbitmqctl -n $RABBITMQ_NODENAME set_cluster_name `hostname -d`\n
                      else\n
                          rabbitmqctl -n $RABBITMQ_NODENAME stop_app\n
                          rabbitmqctl -n $RABBITMQ_NODENAME join_cluster rabbit@`getent hosts \\`hostname -d\\` | cut -d \" \" -f1 | head -1`\n
                          rabbitmqctl -n $RABBITMQ_NODENAME start_app\n
                      fi\n

                      rabbitmqctl -n $RABBITMQ_NODENAME set_policy ha-all \".\" '{\"ha-mode\":\"all\",\"ha-sync-mode\":\"automatic\"}'\n
                      break\n
                  fi\n
                  sleep 1s\n
                done\n
              "]
  volumeClaimTemplates:
    - metadata:
        name: data-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
